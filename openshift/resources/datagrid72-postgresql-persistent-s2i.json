{
    "kind": "Template",
    "apiVersion": "template.openshift.io/v1",
    "metadata": {
        "name": "datagrid72-postgresql-persistent-s2i",
        "creationTimestamp": null,
        "annotations": {
            "description": "An example Red Hat JBoss Data Grid application with a PostgreSQL database. For more information about using this template, see https://github.com/jboss-openshift/application-templates.",
            "iconClass": "icon-datagrid",
            "openshift.io/display-name": "Red Hat JBoss Data Grid 7.2 + PostgreSQL (with https)",
            "openshift.io/provider-display-name": "Red Hat, Inc.",
            "tags": "datagrid,jboss",
            "template.openshift.io/documentation-url": "https://access.redhat.com/documentation/en/red-hat-jboss-data-grid/",
            "template.openshift.io/long-description": "This template defines resources needed to develop Red Hat JBoss Data Grid 7.2 based applications, including a deployment configuration, using PostgreSQL database for persistence and secure communication using https.",
            "template.openshift.io/support-url": "https://access.redhat.com",
            "version": "1.1"
        }
    },
    "message": "A new data grid service (using PostgreSQL with persistent storage) has been created in your project. It supports connector type(s) \"${INFINISPAN_CONNECTORS}\". The username/password for accessing the MySQL database \"${DB_DATABASE}\" is ${DB_USERNAME}/${DB_PASSWORD}. Please be sure to create the following secrets: \"${HTTPS_SECRET}\" containing the ${HTTPS_KEYSTORE} file used for serving secure content; \"${JGROUPS_ENCRYPT_SECRET}\" containing the ${JGROUPS_ENCRYPT_KEYSTORE} file used for securing JGroups communications.",
    "objects": [
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "annotations": {
                    "description": "The web server's HTTP port.",
                    "service.alpha.openshift.io/dependencies": "[{\"name\": \"${APPLICATION_NAME}-postgresql\", \"kind\": \"Service\"}]"
                },
                "labels": {
                    "application": "${APPLICATION_NAME}"
                },
                "name": "${APPLICATION_NAME}"
            },
            "spec": {
                "ports": [
                    {
                        "port": 8080,
                        "targetPort": 8080
                    }
                ],
                "selector": {
                    "deploymentConfig": "${APPLICATION_NAME}"
                }
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "annotations": {
                    "description": "The web server's HTTPS port.",
                    "service.alpha.openshift.io/dependencies": "[{\"name\": \"${APPLICATION_NAME}-postgresql\", \"kind\": \"Service\"}]"
                },
                "labels": {
                    "application": "${APPLICATION_NAME}"
                },
                "name": "secure-${APPLICATION_NAME}"
            },
            "spec": {
                "ports": [
                    {
                        "port": 8443,
                        "targetPort": 8443
                    }
                ],
                "selector": {
                    "deploymentConfig": "${APPLICATION_NAME}"
                }
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "annotations": {
                    "description": "Memcached service for clustered applications."
                },
                "labels": {
                    "application": "${APPLICATION_NAME}"
                },
                "name": "${APPLICATION_NAME}-memcached"
            },
            "spec": {
                "ports": [
                    {
                        "port": 11211,
                        "targetPort": 11211
                    }
                ],
                "selector": {
                    "deploymentConfig": "${APPLICATION_NAME}"
                }
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "annotations": {
                    "description": "Hot Rod service for clustered applications."
                },
                "labels": {
                    "application": "${APPLICATION_NAME}"
                },
                "name": "${APPLICATION_NAME}-hotrod"
            },
            "spec": {
                "ports": [
                    {
                        "port": 11333,
                        "targetPort": 11333
                    }
                ],
                "selector": {
                    "deploymentConfig": "${APPLICATION_NAME}"
                }
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "annotations": {
                    "description": "The database server's port."
                },
                "labels": {
                    "application": "${APPLICATION_NAME}"
                },
                "name": "${APPLICATION_NAME}-postgresql"
            },
            "spec": {
                "ports": [
                    {
                        "port": 5432,
                        "targetPort": 5432
                    }
                ],
                "selector": {
                    "deploymentConfig": "${APPLICATION_NAME}-postgresql"
                }
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "annotations": {
                    "description": "The JGroups ping port for clustering.",
                    "service.alpha.kubernetes.io/tolerate-unready-endpoints": "true"
                },
                "labels": {
                    "application": "${APPLICATION_NAME}"
                },
                "name": "${APPLICATION_NAME}-ping"
            },
            "spec": {
                "clusterIP": "None",
                "ports": [
                    {
                        "name": "ping",
                        "port": 8888
                    }
                ],
                "selector": {
                    "deploymentConfig": "${APPLICATION_NAME}"
                }
            }
        },
        {
            "apiVersion": "v1",
            "id": "${APPLICATION_NAME}-http",
            "kind": "Route",
            "metadata": {
                "annotations": {
                    "description": "Route for application's HTTP service."
                },
                "labels": {
                    "application": "${APPLICATION_NAME}"
                },
                "name": "${APPLICATION_NAME}"
            },
            "spec": {
                "host": "${HOSTNAME_HTTP}",
                "to": {
                    "name": "${APPLICATION_NAME}"
                }
            }
        },
        {
            "apiVersion": "v1",
            "id": "${APPLICATION_NAME}-https",
            "kind": "Route",
            "metadata": {
                "annotations": {
                    "description": "Route for application's HTTPS service."
                },
                "labels": {
                    "application": "${APPLICATION_NAME}"
                },
                "name": "secure-${APPLICATION_NAME}"
            },
            "spec": {
                "host": "${HOSTNAME_HTTPS}",
                "tls": {
                    "termination": "passthrough"
                },
                "to": {
                    "name": "secure-${APPLICATION_NAME}"
                }
            }
        },
        {
            "kind": "BuildConfig",
            "apiVersion": "v1",
            "metadata": {
                "name": "${APPLICATION_NAME}",
                "labels": {
                    "application": "${APPLICATION_NAME}"
                }
            },
            "spec": {
                "source": {
                    "type": "Git",
                    "git": {
                        "uri": "${SOURCE_REPOSITORY_URL}",
                        "ref": "${SOURCE_REPOSITORY_REF}"
                    },
                    "contextDir": "${CONTEXT_DIR}"
                },
                "strategy": {
                    "type": "Source",
                    "sourceStrategy": {
                        "forcePull": true,
                        "from": {
                            "kind": "ImageStreamTag",
                            "namespace": "${IMAGE_STREAM_NAMESPACE}",
                            "name": "jboss-datagrid72-openshift:1.1"
                        }
                    }
                },
                "output": {
                    "to": {
                        "kind": "ImageStreamTag",
                        "name": "${APPLICATION_NAME}:latest"
                    }
                },
                "triggers": [
                    {
                        "type": "GitHub",
                        "github": {
                            "secret": "${GITHUB_WEBHOOK_SECRET}"
                        }
                    },
                    {
                        "type": "Generic",
                        "generic": {
                            "secret": "${GENERIC_WEBHOOK_SECRET}"
                        }
                    },
                    {
                        "type": "ImageChange",
                        "imageChange": {}
                    },
                    {
                        "type": "ConfigChange"
                    }
                ]
            }
        },
        {
            "apiVersion": "v1",
            "kind": "DeploymentConfig",
            "metadata": {
                "labels": {
                    "application": "${APPLICATION_NAME}"
                },
                "name": "${APPLICATION_NAME}"
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "deploymentConfig": "${APPLICATION_NAME}"
                },
                "strategy": {
                    "type": "Recreate"
                },
                "template": {
                    "metadata": {
                        "labels": {
                            "application": "${APPLICATION_NAME}",
                            "deploymentConfig": "${APPLICATION_NAME}"
                        },
                        "name": "${APPLICATION_NAME}"
                    },
                    "spec": {
                        "containers": [
                            {
                                "env": [
                                    {
                                        "name": "USERNAME",
                                        "value": "${USERNAME}"
                                    },
                                    {
                                        "name": "PASSWORD",
                                        "value": "${PASSWORD}"
                                    },
                                    {
                                        "name": "ADMIN_GROUP",
                                        "value": "${ADMIN_GROUP}"
                                    },
                                    {
                                        "name": "HOTROD_AUTHENTICATION",
                                        "value": "${HOTROD_AUTHENTICATION}"
                                    },
                                    {
                                        "name": "CONTAINER_SECURITY_ROLE_MAPPER",
                                        "value": "${CONTAINER_SECURITY_ROLE_MAPPER}"
                                    },
                                    {
                                        "name": "CONTAINER_SECURITY_ROLES",
                                        "value": "${CONTAINER_SECURITY_ROLES}"
                                    },
                                    {
                                        "name": "HTTPS_KEYSTORE_DIR",
                                        "value": "/etc/datagrid-secret-volume"
                                    },
                                    {
                                        "name": "HTTPS_KEYSTORE",
                                        "value": "${HTTPS_KEYSTORE}"
                                    },
                                    {
                                        "name": "HTTPS_NAME",
                                        "value": "${HTTPS_NAME}"
                                    },
                                    {
                                        "name": "HTTPS_PASSWORD",
                                        "value": "${HTTPS_PASSWORD}"
                                    },
                                    {
                                        "name": "DB_SERVICE_PREFIX_MAPPING",
                                        "value": "${APPLICATION_NAME}-postgresql=DB"
                                    },
                                    {
                                        "name": "DB_JNDI",
                                        "value": "${DB_JNDI}"
                                    },
                                    {
                                        "name": "DB_USERNAME",
                                        "value": "${DB_USERNAME}"
                                    },
                                    {
                                        "name": "DB_PASSWORD",
                                        "value": "${DB_PASSWORD}"
                                    },
                                    {
                                        "name": "DB_DATABASE",
                                        "value": "${DB_DATABASE}"
                                    },
                                    {
                                        "name": "TX_DATABASE_PREFIX_MAPPING",
                                        "value": "${APPLICATION_NAME}-postgresql=DB"
                                    },
                                    {
                                        "name": "DB_MIN_POOL_SIZE",
                                        "value": "${DB_MIN_POOL_SIZE}"
                                    },
                                    {
                                        "name": "DB_MAX_POOL_SIZE",
                                        "value": "${DB_MAX_POOL_SIZE}"
                                    },
                                    {
                                        "name": "DB_TX_ISOLATION",
                                        "value": "${DB_TX_ISOLATION}"
                                    },
                                    {
                                        "name": "DEFAULT_JDBC_STORE_TYPE",
                                        "value": "string"
                                    },
                                    {
                                        "name": "DEFAULT_JDBC_STORE_DATASOURCE",
                                        "value": "${DB_JNDI}"
                                    },
                                    {
                                        "name": "MEMCACHED_JDBC_STORE_TYPE",
                                        "value": "string"
                                    },
                                    {
                                        "name": "MEMCACHED_JDBC_STORE_DATASOURCE",
                                        "value": "${DB_JNDI}"
                                    },
                                    {
                                        "name": "JGROUPS_PING_PROTOCOL",
                                        "value": "openshift.DNS_PING"
                                    },
                                    {
                                        "name": "OPENSHIFT_DNS_PING_SERVICE_NAME",
                                        "value": "${APPLICATION_NAME}-ping"
                                    },
                                    {
                                        "name": "OPENSHIFT_DNS_PING_SERVICE_PORT",
                                        "value": "8888"
                                    },
                                    {
                                        "name": "INFINISPAN_CONNECTORS",
                                        "value": "${INFINISPAN_CONNECTORS}"
                                    },
                                    {
                                        "name": "CACHE_NAMES",
                                        "value": "${CACHE_NAMES}"
                                    },
                                    {
                                        "name": "DATAVIRT_CACHE_NAMES",
                                        "value": "${DATAVIRT_CACHE_NAMES}"
                                    },
                                    {
                                        "name": "CACHE_TYPE_DEFAULT",
                                        "value": "${CACHE_TYPE_DEFAULT}"
                                    },
                                    {
                                        "name": "ENCRYPTION_REQUIRE_SSL_CLIENT_AUTH",
                                        "value": "${ENCRYPTION_REQUIRE_SSL_CLIENT_AUTH}"
                                    },
                                    {
                                        "name": "HOTROD_SERVICE_NAME",
                                        "value": "${APPLICATION_NAME}-hotrod"
                                    },
                                    {
                                        "name": "HOTROD_ENCRYPTION",
                                        "value": "${HTTPS_NAME}"
                                    },
                                    {
                                        "name": "MEMCACHED_CACHE",
                                        "value": "${MEMCACHED_CACHE}"
                                    },
                                    {
                                        "name": "REST_SECURITY_DOMAIN",
                                        "value": "${REST_SECURITY_DOMAIN}"
                                    },
                                    {
                                        "name": "JGROUPS_ENCRYPT_SECRET",
                                        "value": "${JGROUPS_ENCRYPT_SECRET}"
                                    },
                                    {
                                        "name": "JGROUPS_ENCRYPT_KEYSTORE",
                                        "value": "${JGROUPS_ENCRYPT_KEYSTORE}"
                                    },
                                    {
                                        "name": "JGROUPS_ENCRYPT_KEYSTORE_DIR",
                                        "value": "/etc/jgroups-encrypt-secret-volume"
                                    },
                                    {
                                        "name": "JGROUPS_ENCRYPT_NAME",
                                        "value": "${JGROUPS_ENCRYPT_NAME}"
                                    },
                                    {
                                        "name": "JGROUPS_ENCRYPT_PASSWORD",
                                        "value": "${JGROUPS_ENCRYPT_PASSWORD}"
                                    },
                                    {
                                        "name": "JGROUPS_CLUSTER_PASSWORD",
                                        "value": "${JGROUPS_CLUSTER_PASSWORD}"
                                    },
                                    {
                                        "name": "JAVA_OPTS_APPEND",
                                        "value": "${JAVA_OPTS_APPEND}"
                                    },
                                    {
                                        "name": "OPENSHIFT_KUBE_PING_NAMESPACE",
                                        "value": "${OPENSHIFT_KUBE_PING_NAMESPACE}"
                                    },
                                    {
                                        "name": "OPENSHIFT_KUBE_PING_LABELS",
                                        "value": "${OPENSHIFT_KUBE_PING_LABELS}"
                                    }
                                ],
                                "image": "jboss-datagrid72-openshift",
                                "imagePullPolicy": "Always",
                                "livenessProbe": {
                                    "exec": {
                                        "command": [
                                            "/bin/bash",
                                            "-c",
                                            "/opt/datagrid/bin/livenessProbe.sh"
                                        ]
                                    },
                                    "initialDelaySeconds": 60
                                },
                                "name": "${APPLICATION_NAME}",
                                "ports": [
                                    {
                                        "containerPort": 8778,
                                        "name": "jolokia",
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 8080,
                                        "name": "http",
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 8443,
                                        "name": "https",
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 8888,
                                        "name": "ping",
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 11211,
                                        "name": "memcached",
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 11222,
                                        "name": "hotrod-internal",
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 11333,
                                        "name": "hotrod",
                                        "protocol": "TCP"
                                    }
                                ],
                                "readinessProbe": {
                                    "exec": {
                                        "command": [
                                            "/bin/bash",
                                            "-c",
                                            "/opt/datagrid/bin/readinessProbe.sh"
                                        ]
                                    }
                                },
                                "resources": {
                                    "limits": {
                                        "memory": "${MEMORY_LIMIT}"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "mountPath": "/etc/datagrid-secret-volume",
                                        "name": "datagrid-keystore-volume",
                                        "readOnly": true
                                    },
                                    {
                                        "mountPath": "/etc/jgroups-encrypt-secret-volume",
                                        "name": "datagrid-jgroups-keystore-volume",
                                        "readOnly": true
                                    }
                                ]
                            }
                        ],
                        "terminationGracePeriodSeconds": 60,
                        "volumes": [
                            {
                                "name": "datagrid-keystore-volume",
                                "secret": {
                                    "secretName": "${HTTPS_SECRET}"
                                }
                            },
                            {
                                "name": "datagrid-jgroups-keystore-volume",
                                "secret": {
                                    "secretName": "${JGROUPS_ENCRYPT_SECRET}"
                                }
                            }
                        ]
                    }
                },
                "triggers": [
                    {
                        "imageChangeParams": {
                            "automatic": true,
                            "containerNames": [
                                "${APPLICATION_NAME}"
                            ],
                            "from": {
                                "kind": "ImageStreamTag",
                                "name": "jboss-datagrid72-openshift:1.1",
                                "namespace": "${IMAGE_STREAM_NAMESPACE}"
                            }
                        },
                        "type": "ImageChange"
                    },
                    {
                        "type": "ConfigChange"
                    }
                ]
            }
        },
        {
            "apiVersion": "v1",
            "kind": "DeploymentConfig",
            "metadata": {
                "labels": {
                    "application": "${APPLICATION_NAME}"
                },
                "name": "${APPLICATION_NAME}-postgresql"
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "deploymentConfig": "${APPLICATION_NAME}-postgresql"
                },
                "strategy": {
                    "type": "Recreate"
                },
                "template": {
                    "metadata": {
                        "labels": {
                            "application": "${APPLICATION_NAME}",
                            "deploymentConfig": "${APPLICATION_NAME}-postgresql"
                        },
                        "name": "${APPLICATION_NAME}-postgresql"
                    },
                    "spec": {
                        "containers": [
                            {
                                "env": [
                                    {
                                        "name": "POSTGRESQL_USER",
                                        "value": "${DB_USERNAME}"
                                    },
                                    {
                                        "name": "POSTGRESQL_PASSWORD",
                                        "value": "${DB_PASSWORD}"
                                    },
                                    {
                                        "name": "POSTGRESQL_DATABASE",
                                        "value": "${DB_DATABASE}"
                                    },
                                    {
                                        "name": "POSTGRESQL_MAX_CONNECTIONS",
                                        "value": "${POSTGRESQL_MAX_CONNECTIONS}"
                                    },
                                    {
                                        "name": "POSTGRESQL_MAX_PREPARED_TRANSACTIONS",
                                        "value": "${POSTGRESQL_MAX_CONNECTIONS}"
                                    },
                                    {
                                        "name": "POSTGRESQL_SHARED_BUFFERS",
                                        "value": "${POSTGRESQL_SHARED_BUFFERS}"
                                    }
                                ],
                                "image": "postgresql",
                                "imagePullPolicy": "Always",
                                "livenessProbe": {
                                    "initialDelaySeconds": 30,
                                    "tcpSocket": {
                                        "port": 5432
                                    },
                                    "timeoutSeconds": 1
                                },
                                "name": "${APPLICATION_NAME}-postgresql",
                                "ports": [
                                    {
                                        "containerPort": 5432,
                                        "protocol": "TCP"
                                    }
                                ],
                                "readinessProbe": {
                                    "exec": {
                                        "command": [
                                            "/bin/sh",
                                            "-i",
                                            "-c",
                                            "psql -h 127.0.0.1 -U $POSTGRESQL_USER -q -d $POSTGRESQL_DATABASE -c 'SELECT 1'"
                                        ]
                                    },
                                    "initialDelaySeconds": 5,
                                    "timeoutSeconds": 1
                                },
                                "volumeMounts": [
                                    {
                                        "mountPath": "/var/lib/pgsql/data",
                                        "name": "${APPLICATION_NAME}-postgresql-pvol"
                                    }
                                ]
                            }
                        ],
                        "volumes": [
                            {
                                "name": "${APPLICATION_NAME}-postgresql-pvol",
                                "persistentVolumeClaim": {
                                    "claimName": "${APPLICATION_NAME}-postgresql-claim"
                                }
                            }
                        ]
                    }
                },
                "triggers": [
                    {
                        "imageChangeParams": {
                            "automatic": true,
                            "containerNames": [
                                "${APPLICATION_NAME}-postgresql"
                            ],
                            "from": {
                                "kind": "ImageStreamTag",
                                "name": "postgresql:${POSTGRESQL_IMAGE_STREAM_TAG}",
                                "namespace": "${IMAGE_STREAM_NAMESPACE}"
                            }
                        },
                        "type": "ImageChange"
                    },
                    {
                        "type": "ConfigChange"
                    }
                ]
            }
        },
        {
            "apiVersion": "v1",
            "kind": "PersistentVolumeClaim",
            "metadata": {
                "labels": {
                    "application": "${APPLICATION_NAME}"
                },
                "name": "${APPLICATION_NAME}-postgresql-claim"
            },
            "spec": {
                "accessModes": [
                    "ReadWriteOnce"
                ],
                "resources": {
                    "requests": {
                        "storage": "${VOLUME_CAPACITY}"
                    }
                }
            }
        }
    ],
    "parameters": [
        {
            "name": "APPLICATION_NAME",
            "displayName": "Application Name",
            "description": "The name for the application.",
            "value": "datagrid-cluster",
            "required": true
        },
        {
            "displayName": "Git Repository URL",
            "description": "Git source URI for application",
            "name": "SOURCE_REPOSITORY_URL",
            "value": "https://github.com/rafaeltuelho/datagrid-s2i-example",
            "required": true
        },
        {
            "displayName": "Git Reference",
            "description": "Git branch/tag reference",
            "name": "SOURCE_REPOSITORY_REF",
            "value": "master",
            "required": false
        },
        {
            "displayName": "Context Directory",
            "description": "Path within Git project to build; empty for root project directory.",
            "name": "CONTEXT_DIR",
            "value": "",
            "required": false
        },
        {
            "displayName": "Github Webhook Secret",
            "description": "GitHub trigger secret",
            "name": "GITHUB_WEBHOOK_SECRET",
            "from": "[a-zA-Z0-9]{8}",
            "generate": "expression",
            "required": true
        },
        {
            "displayName": "Generic Webhook Secret",
            "description": "Generic build trigger secret",
            "name": "GENERIC_WEBHOOK_SECRET",
            "from": "[a-zA-Z0-9]{8}",
            "generate": "expression",
            "required": true
        },
        {
            "name": "HOSTNAME_HTTP",
            "displayName": "Custom http Route Hostname",
            "description": "Custom hostname for http service route.  Leave blank for default hostname, e.g.: \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e",
            "value": "",
            "required": false
        },
        {
            "name": "HOSTNAME_HTTPS",
            "displayName": "Custom https Route Hostname",
            "description": "Custom hostname for https service route.  Leave blank for default hostname, e.g.: secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e",
            "value": "",
            "required": false
        },
        {
            "name": "USERNAME",
            "displayName": "Username",
            "description": "User name for JDG user.",
            "value": "ispnadmin",
            "required": false
        },
        {
            "name": "PASSWORD",
            "displayName": "Password",
            "description": "The password to access the JDG Caches. Must be different than username; must not be root, admin, or administrator; must contain at least 8 characters, 1 alphabetic character(s), 1 digit(s), and 1 non-alphanumeric symbol(s). (optional)",
            "value": "",
            "required": false
        },
        {
            "name": "ADMIN_GROUP",
            "displayName": "JDG User Roles/Groups",
            "description": "Comma delimited list of roles/groups associated with the JDG user",
            "name": "ADMIN_GROUP",
            "value": "",
            "required": false
        },
        {
            "name": "HOTROD_AUTHENTICATION",
            "displayName": "Hotrod Authentication",
            "description": "Enable Hotrod Authentication",
            "value": "",
            "required": false
        },
        {
            "name": "CONTAINER_SECURITY_ROLE_MAPPER",
            "displayName": "Container Security Role Mapper",
            "description": "Defines which role mapper to use for cache authentication",
            "value": "",
            "required": false
        },
        {
            "name": "CONTAINER_SECURITY_ROLES",
            "displayName": "Container Security Roles",
            "description": "Comma delimited list of role names and assigned permissions",
            "value": "",
            "required": false
        },
        {
            "name": "HTTPS_SECRET",
            "displayName": "Server Keystore Secret Name",
            "description": "The name of the secret containing the keystore file",
            "value": "datagrid-app-secret",
            "required": true
        },
        {
            "name": "HTTPS_KEYSTORE",
            "displayName": "Server Keystore Filename",
            "description": "The name of the keystore file within the secret",
            "value": "keystore.jks",
            "required": false
        },
        {
            "name": "HTTPS_NAME",
            "displayName": "Server Certificate Name",
            "description": "The name associated with the server certificate",
            "value": "jboss",
            "required": false
        },
        {
            "name": "HTTPS_PASSWORD",
            "displayName": "Server Keystore Password",
            "description": "The password for the keystore and certificate",
            "value": "mykeystorepass",
            "required": false
        },
        {
            "name": "DB_JNDI",
            "displayName": "Database JNDI Name",
            "description": "Database JNDI name used by application to resolve the datasource, e.g. java:/jboss/datasources/postgresql",
            "value": "java:jboss/datasources/postgresql",
            "required": false
        },
        {
            "name": "DB_DATABASE",
            "displayName": "Database Name",
            "description": "Database name",
            "name": "DB_DATABASE",
            "value": "JDG",
            "required": true
        },
        {
            "name": "DB_USERNAME",
            "displayName": "Database Username",
            "description": "Database user name",
            "name": "DB_USERNAME",
            "value": "jdg",
            "required": true
        },
        {
            "name": "DB_PASSWORD",
            "displayName": "Database Password",
            "description": "Database user password",
            "generate": "expression",
            "from": "[a-zA-Z0-9]{8}",
            "required": true
        },
        {
            "name": "DB_MIN_POOL_SIZE",
            "displayName": "Datasource Minimum Pool Size",
            "description": "Sets xa-pool/min-pool-size for the configured datasource.",
            "required": false
        },
        {
            "name": "DB_MAX_POOL_SIZE",
            "displayName": "Datasource Maximum Pool Size",
            "description": "Sets xa-pool/max-pool-size for the configured datasource.",
            "required": false
        },
        {
            "name": "DB_TX_ISOLATION",
            "displayName": "Datasource Transaction Isolation",
            "description": "Sets transaction-isolation for the configured datasource.",
            "required": false
        },
        {
            "name": "POSTGRESQL_MAX_CONNECTIONS",
            "displayName": "PostgreSQL Maximum number of connections",
            "description": "The maximum number of client connections allowed. This also sets the maximum number of prepared transactions.",
            "required": false
        },
        {
            "name": "POSTGRESQL_SHARED_BUFFERS",
            "displayName": "PostgreSQL Shared Buffers",
            "description": "Configures how much memory is dedicated to PostgreSQL for caching data.",
            "required": false
        },
        {
            "name": "VOLUME_CAPACITY",
            "displayName": "Database Volume Capacity",
            "description": "Size of persistent storage for database volume.",
            "value": "1Gi",
            "required": true
        },
        {
            "name": "IMAGE_STREAM_NAMESPACE",
            "displayName": "ImageStream Namespace",
            "description": "Namespace in which the ImageStreams for Red Hat Middleware images are installed. These ImageStreams are normally installed in the openshift namespace. You should only need to modify this if you've installed the ImageStreams in a different namespace/project.",
            "value": "openshift",
            "required": true
        },
        {
            "name": "INFINISPAN_CONNECTORS",
            "displayName": "Infinispan Connectors",
            "description": "Comma-separated list of connector types that should be configured (defaults to 'memcached,hotrod,rest')",
            "value": "hotrod,rest",
            "required": true
        },
        {
            "name": "CACHE_NAMES",
            "displayName": "Cache Names",
            "description": "Comma-separated list of caches to configure.  By default, a distributed-cache, with a mode of SYNC will be configured for each entry.",
            "value": "",
            "required": false
        },
        {
            "name": "DATAVIRT_CACHE_NAMES",
            "displayName": "Datavirt Cache Names",
            "description": "Comma-separated list of caches to configure for use by Red Hat JBoss Data Virtualization for materialization of views.  Three caches will be created for each named cache: \u003cname\u003e, \u003cname\u003e_staging and \u003cname\u003e_alias.",
            "value": "",
            "required": false
        },
        {
            "name": "CACHE_TYPE_DEFAULT",
            "displayName": "Default Cache Type",
            "description": "Default cache type for all caches. If empty then distributed will be the default",
            "value": "",
            "required": false
        },
        {
            "name": "ENCRYPTION_REQUIRE_SSL_CLIENT_AUTH",
            "displayName": "Encryption Requires SSL Client Authentication?",
            "description": "Whether to require client certificate authentication. Defaults to false",
            "value": "",
            "required": false
        },
        {
            "name": "MEMCACHED_CACHE",
            "displayName": "Memcached Cache Name",
            "description": "The name of the cache to expose through this memcached connector",
            "value": "default_memcached",
            "required": false
        },
        {
            "name": "REST_SECURITY_DOMAIN",
            "displayName": "REST Security Domain",
            "description": "The domain, declared in the security subsystem, that should be used to authenticate access to the REST endpoint",
            "value": "",
            "required": false
        },
        {
            "name": "JGROUPS_ENCRYPT_SECRET",
            "displayName": "JGroups Secret Name",
            "description": "The name of the secret containing the keystore file",
            "value": "datagrid-app-secret",
            "required": false
        },
        {
            "name": "JGROUPS_ENCRYPT_KEYSTORE",
            "displayName": "JGroups Keystore Filename",
            "description": "The name of the keystore file within the secret",
            "value": "jgroups.jceks",
            "required": false
        },
        {
            "name": "JGROUPS_ENCRYPT_NAME",
            "displayName": "JGroups Certificate Name",
            "description": "The name associated with the server certificate",
            "value": "secret-key",
            "required": false
        },
        {
            "name": "JGROUPS_ENCRYPT_PASSWORD",
            "displayName": "JGroups Keystore Password",
            "description": "The password for the keystore and certificate",
            "value": "password",
            "required": false
        },
        {
            "name": "JGROUPS_CLUSTER_PASSWORD",
            "displayName": "JGroups Cluster Password",
            "description": "JGroups cluster password",
            "generate": "expression",
            "from": "[a-zA-Z0-9]{8}",
            "required": true
        },
        {
            "name": "POSTGRESQL_IMAGE_STREAM_TAG",
            "displayName": "PostgreSQL Image Stream Tag",
            "description": "The tag to use for the \"postgresql\" image stream.  Typically, this aligns with the major.minor version of PostgreSQL.",
            "value": "9.5",
            "required": true
        },
        {
            "name": "MEMORY_LIMIT",
            "description": "Container memory limit",
            "value": "1Gi",
            "required": false
        },
        {
            "description": "Additional/custom startup JVM properties/options (eg. -Xms1024m -Xmx1024m)",
            "name": "JAVA_OPTS_APPEND",
            "value": "-Dcustom_opts_mark=${APPLICATION_NAME} ",
            "required": false
        },
        {
            "description": "Openshift Kube Ping Labels used by JGroups. Uses ${APPLICATION_NAME} by default",
            "name": "OPENSHIFT_KUBE_PING_NAMESPACE",
            "value": "${APPLICATION_NAME}",
            "required": false
        },
        {
            "description": "Openshift Kube Ping Labels used by JGroups. Uses ${APPLICATION_NAME} by default",
            "name": "OPENSHIFT_KUBE_PING_LABELS",
            "value": "${APPLICATION_NAME}",
            "required": false
        }
    ],
    "labels": {
        "template": "datagrid72-postgresql-persistent-s2i"
    }
}
